/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Kotlin application project to get you started.
 */

plugins {
    // Apply the Kotlin JVM plugin to add support for Kotlin.
    id 'org.jetbrains.kotlin.jvm' version '1.3.41'

    // Apply the application plugin to add support for building a CLI application.
    id 'application'

    id 'jacoco'
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}


ext.ktor_version = '1.2.4'


dependencies {
    // Align versions of all Kotlin components
    implementation platform('org.jetbrains.kotlin:kotlin-bom')

    // Use the Kotlin JDK 8 standard library.
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'

    // Use the Kotlin test library.
    testImplementation 'org.jetbrains.kotlin:kotlin-test'

    // Use the Kotlin JUnit integration.
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit'
    testCompile "org.jetbrains.kotlin:kotlin-test:1.3.41"

    compile "io.ktor:ktor-server-netty:$ktor_version"
    implementation "io.ktor:ktor-websockets:$ktor_version"
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}

check.dependsOn jacocoTestReport

def createScript(project, mainClass, name) {
    project.tasks.create(name: name, type: CreateStartScripts) {
        outputDir       = new File(project.buildDir, 'scripts')
        mainClassName   = mainClass
        applicationName = name
        classpath       = project.tasks[JavaPlugin.JAR_TASK_NAME].outputs.files + project.configurations.runtime
    }
    project.tasks[name].dependsOn(project.jar)

    project.applicationDistribution.with {
        into("bin") {
            from(project.tasks[name])
            fileMode = 0755
        }
    }
}

startScripts.enabled = false
run.enabled = false

createScript(project, 'snailmail.standalone.client.StandaloneClient', 'client')
createScript(project, 'snailmail.standalone.server.StandaloneServer', 'server')