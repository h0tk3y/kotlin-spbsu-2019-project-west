/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Kotlin application project to get you started.
 */

plugins {
    // Apply the Kotlin JVM plugin to add support for Kotlin.
    id 'org.jetbrains.kotlin.jvm' version '1.3.50'

    id 'jacoco'
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

ext.ktor_version = '1.2.4'

dependencies {
    // Align versions of all Kotlin components
    implementation platform('org.jetbrains.kotlin:kotlin-bom')

    // Use the Kotlin JDK 8 standard library.
    compile 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'

    // Use the Kotlin test library.
    testCompile 'org.jetbrains.kotlin:kotlin-test'

    // Use the Kotlin JUnit integration.
    testCompile 'org.jetbrains.kotlin:kotlin-test-junit'
    testCompile "org.jetbrains.kotlin:kotlin-test"

    compile "io.ktor:ktor-server-netty:$ktor_version"
    compile "io.ktor:ktor-websockets:$ktor_version"
    compile "io.ktor:ktor-client-websockets:$ktor_version"
    compile "io.ktor:ktor-client-cio:$ktor_version"
    compile "io.ktor:ktor-client-js:$ktor_version"
    compile "io.ktor:ktor-client-okhttp:$ktor_version"

    compile "com.beust:klaxon:5.0.13"

    // https://mvnrepository.com/artifact/com.googlecode.lanterna/lanterna
    compile "com.googlecode.lanterna:lanterna:3.0.1"
}

jar {
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}

check.dependsOn jacocoTestReport

task serverJar(type: Jar, dependsOn: classes) {
    archiveFileName = 'server.jar'
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
    exclude("**/client/**")

    manifest {
        attributes 'Main-Class': 'snailmail.standalone.server.StandaloneServerKt'
    }
    with jar
}

task clientJar(type: Jar, dependsOn: classes) {
    archiveFileName = 'client.jar'
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
    exclude("**/server/**")

    manifest {
        attributes 'Main-Class': 'snailmail.standalone.client.StandaloneClientKt'
    }
    with jar
}


task lanternaClientJar(type: Jar, dependsOn: classes) {
    archiveFileName = 'lanternaClient.jar'
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
    exclude("**/server/**")

    manifest {
        attributes 'Main-Class': 'snailmail.standalone.client.LanternaClientKt'
    }
    with jar
}
